apiVersion: v1
kind: ConfigMap
metadata: { name: otel-config }
data:
  otel.yaml: |
    receivers: { otlp: { protocols: { grpc: {}, http: {} } } }
    processors: { batch: {} }
    exporters:
      jaeger:
        endpoint: jaeger-collector.dev.svc.cluster.local:14250
        tls: { insecure: true }
      prometheus:
        endpoint: 0.0.0.0:8889
    service:
      pipelines:
        traces:  { receivers: [otlp], processors: [batch], exporters: [jaeger] }
        metrics: { receivers: [otlp], processors: [batch], exporters: [prometheus] }
---
apiVersion: apps/v1
kind: Deployment
metadata: { name: otel-collector }
spec:
  replicas: 1
  selector: { matchLabels: { app: otel } }
  template:
    metadata: { labels: { app: otel } }
    spec:
      containers:
      - name: otelcol
        image: otel/opentelemetry-collector-contrib:latest
        args: ["--config=/conf/otel.yaml"]
        volumeMounts: [{ name: conf, mountPath: /conf }]
        ports:
        - {containerPort: 4317, name: otlp-grpc}
        - {containerPort: 4318, name: otlp-http}
        - {containerPort: 8889, name: prom-exp}
      volumes:
      - name: conf
        configMap: { name: otel-config, items: [{key: otel.yaml, path: otel.yaml}] }
---
apiVersion: v1
kind: Service
metadata: { name: otel-collector }
spec:
  selector: { app: otel }
  ports:
  - { name: otlp-grpc, port: 4317, targetPort: 4317 }
  - { name: otlp-http, port: 4318, targetPort: 4318 }
  - { name: prom-exp,  port: 8889, targetPort: 8889 }
